{"ast":null,"code":"var _jsxFileName = \"d:\\\\kuliah\\\\semester 4\\\\RPL\\\\Pertemuan 16\\\\Proyek\\\\HoneyMoney\\\\frontend\\\\src\\\\pages\\\\Beranda.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jwtDecode } from \"jwt-decode\"; // Import jwt-decode\nimport \"../styles/Beranda.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Beranda() {\n  _s();\n  const [user, setUser] = useState(\"User\");\n  const [transactions, setTransactions] = useState([]);\n  const [income, setIncome] = useState(\"\");\n  const [expenses, setExpenses] = useState(\"\");\n  const [incomeDesc, setIncomeDesc] = useState(\"\");\n  const [expenseDesc, setExpenseDesc] = useState(\"\");\n\n  // Fetch data user dan transaksi\n  useEffect(() => {\n    const fetchUserAndTransactions = async () => {\n      try {\n        const token = localStorage.getItem(\"access\"); // Ambil token dari localStorage\n        if (!token) {\n          console.error(\"Token tidak ditemukan. User belum login.\");\n          return;\n        }\n\n        // Dekode token untuk mendapatkan nama user\n        const decodedToken = jwtDecode(token);\n        setUser(decodedToken.username); // Ambil username dari token\n\n        // Fetch transaksi\n        const response = await fetch(\"http://localhost:8000/transactions/\", {\n          headers: {\n            Authorization: `Bearer ${token}` // Kirim token untuk autentikasi\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTransactions(data); // Simpan transaksi ke state\n        } else {\n          console.error(\"Gagal mengambil data transaksi\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    const handleAddIncome = async e => {\n      e.preventDefault();\n      const token = localStorage.getItem(\"access\");\n      try {\n        const response = await fetch(\"http://localhost:8000/transactions/\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            description: incomeDesc,\n            amount: parseFloat(income),\n            transaction_type: \"income\"\n          })\n        });\n        if (response.ok) {\n          const newTransaction = await response.json();\n          setTransactions([...transactions, newTransaction]); // Tambahkan transaksi baru ke state\n          setIncome(\"\");\n          setIncomeDesc(\"\");\n        } else {\n          console.error(\"Gagal menambahkan pemasukan\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    fetchUserAndTransactions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"beranda-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hallo, \", user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selamat datang di HoneyMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"financial-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Catatan Keuangan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transactions\",\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `transaction ${transaction.transaction_type}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: transaction.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: transaction.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rp \", transaction.amount.toLocaleString(\"id-ID\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"graph\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Grafik\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-placeholder\",\n        children: \"[Grafik Placeholder]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Beranda, \"jW90NykiOBRa1Bhvz1C85qYmJmI=\");\n_c = Beranda;\nexport default Beranda;\nvar _c;\n$RefreshReg$(_c, \"Beranda\");","map":{"version":3,"names":["React","useEffect","useState","jwtDecode","jsxDEV","_jsxDEV","Beranda","_s","user","setUser","transactions","setTransactions","income","setIncome","expenses","setExpenses","incomeDesc","setIncomeDesc","expenseDesc","setExpenseDesc","fetchUserAndTransactions","token","localStorage","getItem","console","error","decodedToken","username","response","fetch","headers","Authorization","ok","data","json","handleAddIncome","e","preventDefault","method","body","JSON","stringify","description","amount","parseFloat","transaction_type","newTransaction","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","transaction","date","toLocaleString","id","_c","$RefreshReg$"],"sources":["d:/kuliah/semester 4/RPL/Pertemuan 16/Proyek/HoneyMoney/frontend/src/pages/Beranda.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\"; // Import jwt-decode\r\nimport \"../styles/Beranda.css\";\r\n\r\nfunction Beranda() {\r\n  const [user, setUser] = useState(\"User\");\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [income, setIncome] = useState(\"\");\r\n  const [expenses, setExpenses] = useState(\"\");\r\n  const [incomeDesc, setIncomeDesc] = useState(\"\");\r\n  const [expenseDesc, setExpenseDesc] = useState(\"\");\r\n\r\n  // Fetch data user dan transaksi\r\n  useEffect(() => {\r\n    const fetchUserAndTransactions = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"access\"); // Ambil token dari localStorage\r\n        if (!token) {\r\n          console.error(\"Token tidak ditemukan. User belum login.\");\r\n          return;\r\n        }\r\n\r\n        // Dekode token untuk mendapatkan nama user\r\n        const decodedToken = jwtDecode(token);\r\n        setUser(decodedToken.username); // Ambil username dari token\r\n\r\n        // Fetch transaksi\r\n        const response = await fetch(\"http://localhost:8000/transactions/\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`, // Kirim token untuk autentikasi\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTransactions(data); // Simpan transaksi ke state\r\n        } else {\r\n          console.error(\"Gagal mengambil data transaksi\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n    const handleAddIncome = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem(\"access\");\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/transactions/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          description: incomeDesc,\r\n          amount: parseFloat(income),\r\n          transaction_type: \"income\",\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const newTransaction = await response.json();\r\n        setTransactions([...transactions, newTransaction]); // Tambahkan transaksi baru ke state\r\n        setIncome(\"\");\r\n        setIncomeDesc(\"\");\r\n      } else {\r\n        console.error(\"Gagal menambahkan pemasukan\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n    fetchUserAndTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"beranda-container\">\r\n      <header>\r\n        <h1>Hallo, {user}</h1>\r\n        <p>Selamat datang di HoneyMoney</p>\r\n      </header>\r\n\r\n      <section className=\"financial-summary\">\r\n        <h2>Catatan Keuangan</h2>\r\n        <div className=\"transactions\">\r\n          {transactions.map((transaction) => (\r\n            <div key={transaction.id} className={`transaction ${transaction.transaction_type}`}>\r\n              <p>{transaction.description}</p>\r\n              <p>{transaction.date}</p>\r\n              <p>Rp {transaction.amount.toLocaleString(\"id-ID\")}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"graph\">\r\n        <h2>Grafik</h2>\r\n        <div className=\"graph-placeholder\">[Grafik Placeholder]</div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Beranda;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}